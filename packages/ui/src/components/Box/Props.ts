import { ReactNode } from "react";
import { AlignContent } from "@bewise/ui/type/AlignContent";
import { AlignItems } from "@bewise/ui/type/AlignItems";
import { AlignSelf } from "@bewise/ui/type/AlignSelf";
import { BackfaceVisibility } from "@bewise/ui/type/BackfaceVisibility";
import { Color } from "@bewise/ui/type/Color";
import { ColorVariable } from "@bewise/ui/type/ColorVariable";
import { Cursor } from "@bewise/ui/type/Cursor";
import { Dimension } from "@bewise/ui/type/Dimension";
import { Direction } from "@bewise/ui/type/Direction";
import { Display } from "@bewise/ui/type/Display";
import { FlexDirection } from "@bewise/ui/type/FlexDirection";
import { FlexWrap } from "@bewise/ui/type/FlexWrap";
import { JustifyContent } from "@bewise/ui/type/JustifyContent";
import { Overflow } from "@bewise/ui/type/Overflow";
import { Position } from "@bewise/ui/type/Position";
import { Transform } from "@bewise/ui/type/Transform";
import { Transition } from "@bewise/ui/type/Transition";

export type BoxStyle = {
  bbc?: ColorVariable | Color;
  bbw?: number;
  bc?: ColorVariable | Color;
  bec?: ColorVariable | Color;
  beRadius?: number;
  bew?: number;
  bfv?: BackfaceVisibility;
  bg?: ColorVariable | Color;
  blc?: ColorVariable | Color;
  blRadius?: number;
  blw?: number;
  bottom?: Dimension;
  brc?: ColorVariable | Color;
  brRadius?: number;
  brw?: number;
  bs?: "solid" | "dashed";
  bsc?: ColorVariable | Color;
  bsRadius?: number;
  bsw?: number;
  btc?: ColorVariable | Color;
  btw?: number;
  bw?: number;
  content?: AlignContent;
  cursor?: Cursor;
  dir?: Direction;
  display?: Display;
  end?: Dimension;
  fBasis?: number | string;
  fDir?: FlexDirection;
  fGrow?: number;
  flex?: number;
  fShrink?: number;
  fWrap?: FlexWrap;
  gap?: number;
  h?: Dimension;
  items?: AlignItems;
  justify?: JustifyContent;
  left?: Dimension;
  m?: Dimension;
  maxH?: Dimension;
  maxW?: Dimension;
  mb?: Dimension;
  minH?: Dimension;
  minW?: Dimension;
  ml?: Dimension;
  mr?: Dimension;
  mt?: Dimension;
  mx?: Dimension;
  my?: Dimension;
  opacity?: number;
  overflow?: Overflow;
  p?: Dimension;
  pb?: Dimension;
  pl?: Dimension;
  position?: Position;
  pr?: Dimension;
  pt?: Dimension;
  px?: Dimension;
  py?: Dimension;
  radius?: number;
  ratio?: number;
  right?: Dimension;
  self?: AlignSelf;
  shadow?: number;
  start?: Dimension;
  teRadius?: number;
  tlRadius?: number;
  top?: Dimension;
  transform?: Transform[];
  transition?: Omit<Transition, "key"> | Transition[];
  trRadius?: number;
  tsRadius?: number;
  w?: Dimension;
  z?: number;
};

export type BoxStyleKey = keyof BoxStyle;

export type BoxStyleProps = BoxStyle;

export type BoxProps = BoxStyleProps & {
  id?: string;
  hover?: BoxStyleProps;
  onPress?: () => void;
  disabled?: boolean;
  children?: ReactNode;
};
