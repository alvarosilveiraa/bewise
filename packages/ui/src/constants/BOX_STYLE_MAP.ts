import { marginHorizontalMapper } from "@bewise/ui/mappers/marginHorizontal";
import { marginVerticalMapper } from "@bewise/ui/mappers/marginVertical";
import { paddingHorizontalMapper } from "@bewise/ui/mappers/paddingHorizontal";
import { paddingVerticalMapper } from "@bewise/ui/mappers/paddingVertical";
import { shadowMapper } from "@bewise/ui/mappers/shadow";
import { transformMapper } from "@bewise/ui/mappers/transform";
import { borderColorMapper } from "../mappers/borderColor";
import { borderRadiusMapper } from "../mappers/borderRadius";
import { borderWidthMapper } from "../mappers/borderWidth";
import { cursorMapper } from "../mappers/cursor";

export const BOX_STYLE_MAP = {
  bbc: "borderBottomColor",
  bbs: "borderBottomStyle",
  bbw: "borderBottomWidth",
  bc: borderColorMapper,
  bfv: "backfaceVisibility",
  bg: "backgroundColor",
  blc: "borderLeftColor",
  blRadius: "borderBottomLeftRadius",
  bls: "borderLeftStyle",
  blw: "borderLeftWidth",
  bottom: "bottom",
  brc: "borderRightColor",
  brRadius: "borderBottomRightRadius",
  brs: "borderRightStyle",
  brw: "borderRightWidth",
  bs: "borderStyle",
  btc: "borderTopColor",
  bts: "borderTopStyle",
  btw: "borderTopWidth",
  bw: borderWidthMapper,
  content: "alignContent",
  cursor: cursorMapper,
  dir: "direction",
  display: "display",
  fBasis: "flexBasis",
  fDir: "flexDirection",
  fGrow: "flexGrow",
  flex: "flex",
  fShrink: "flexShrink",
  fWrap: "flexWrap",
  gap: "gap",
  h: "height",
  items: "alignItems",
  justify: "justifyContent",
  left: "left",
  m: "margin",
  maxH: "maxHeight",
  maxW: "maxWidth",
  mb: "marginBottom",
  minH: "minHeight",
  minW: "minWidth",
  ml: "marginLeft",
  mr: "marginRight",
  mt: "marginTop",
  mx: marginHorizontalMapper,
  my: marginVerticalMapper,
  opacity: "opacity",
  overflow: "overflow",
  overflowX: "overflowX",
  overflowY: "overflowY",
  p: "padding",
  pb: "paddingBottom",
  pl: "paddingLeft",
  position: "position",
  pr: "paddingRight",
  pt: "paddingTop",
  px: paddingHorizontalMapper,
  py: paddingVerticalMapper,
  radius: borderRadiusMapper,
  ratio: "aspectRatio",
  right: "right",
  self: "alignSelf",
  shadow: shadowMapper,
  tlRadius: "borderTopLeftRadius",
  top: "top",
  transform: transformMapper,
  transition: "transition",
  trRadius: "borderTopRightRadius",
  w: "width",
  z: "zIndex",
};
